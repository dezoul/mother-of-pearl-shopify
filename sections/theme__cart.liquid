<!-- sections/theme__cart.liquid -->
{% comment %} 
  Slide out cart and alert cart popup.

  Globals:
    - settings.enable_animations: boolean to enable animations
    - settings.type_seperator: setting to pick the type of seperator between text
    - settings.thumbmails_color_scheme: color scheme of thumbnails
    - settings.thumbnails_ratio: set the aspect ratio of thumbnails
    - setttings.cart_button_behavior: set the behavior of the checkout button

  Possible enhancements:
    - Add option to set cart to slideout, alert or page
{% endcomment %}

{% capture drawer_sidebar %}
  {% for block in section.blocks %}
    <div class="border--width border--radius p-4
      {{ section.settings.sidebar_color_border }} 
      {{ section.settings.sidebar_color_scheme }}">
      {%- unless block.settings.image_featured == blank -%}
        <div class="relative mb-2">
          {{ block.settings.image_featured | image_url: height: 32 | image_tag: class: 'object-cover', loading: 'lazy', alt: block.settings.heading }}
        </div>
      {%- endunless -%}
      <h3 class="type__heading type--base mb-2">
        {{ block.settings.heading }}
      </h3>
      <span
        class="type--small m-0--clear">
        {{ block.settings.content }}
      </span>
    </div>
  {% endfor %}
{% endcapture %}
  
{% capture alert_content %}
  <div class="flex flex-wrap items-center justify-between mb-4">

    <p class="flex items-center mb-0">
      {% render 'component__icon', icon: 'check', size: '24', class: 'mr-1' %} {{ 'cart.general.updated' | t }} (<span x-text="cart.item_count"></span>)
    </p>
    <div class="flex">
      <button class="btn btn--smaller btn--plain"
        title="{{ 'general.navigation.close' | t }}"
        @click="cart_alert = false">
        {% render 'component__icon', icon: 'x', size: '24', class: '' %}
      </button>
    </div>
  </div>

  <button class="btn btn--small btn--plain !w-full mb-2"
    @click="cart_drawer = true; cart_alert = false;">
    {{ 'cart.general.view_cart' | t }}
  </button>

  <button class="btn btn--small btn--primary !w-full mb-2" @click="checkout_button_loading = true; setTimeout(function(){ checkout_button_loading = false}, 5000); window.location.href = '/checkout';">
    {{ 'cart.general.checkout' | t }} {% if settings.type_seperator == 'dot' and settings.show_cart_button_prices %}Â·{% elsif settings.type_seperator == 'line' and settings.show_cart_button_prices %}|{% endif %} 
    {% if settings.show_cart_button_prices %}
    <span class="type__nav ml-1" x-text="Shopify.formatMoney(cart.total_price, '{{ cart.currency.symbol }}')"></span>
    {% endif %}
  </button>
{% endcapture %}

<section
  class="fixed inset-0 z-50 overflow-hidden"
  x-show="cart_drawer"
  x-cloak>
  <div class="absolute inset-0 overflow-hidden">
    <div
      class="backdrop-blur-md absolute inset-0 bg-black bg-opacity-50"
      aria-hidden="true"
      x-show="cart_drawer"
      {% if settings.enable_animations %}
        x-transition:enter="animation-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="animation-300"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
      {% endif %}
      x-cloak>
      <div
        class="fixed inset-y-0 right-0 flex max-w-full"
        x-trap="cart_drawer"
        x-show="cart_drawer"
        {% if settings.enable_animations %}
          x-transition:enter="animation-300 opacity-0"
          x-transition:enter-start="translate-x-8 opacity-0"
          x-transition:enter-end="translate-x-0 opacity-100"
          x-transition:leave="animation-300 opacity-100"
          x-transition:leave-start="translate-x-0 opacity-100"
          x-transition:leave-end="translate-x-8 opacity-0"
        {% endif %}
        @click.outside="cart_drawer = false;"
        x-cloak>
        <div class="lg:flex right-full absolute hidden min-w-[256px] self-start gap-4 m-4 flex-wrap">
          {{ drawer_sidebar }}
        </div>
        <div class="md:max-w-md w-screen max-w-full">
          <div class="color__bg-body flex flex-col h-full shadow-xl" action="{{ routes.cart_url }}" method="post">
            
            {%- comment -%}top bar{%- endcomment -%}
            <section class="border--b-width flex flex-wrap items-center justify-between px-4 py-2 sticky top-0
            {{ section.settings.top_color_scheme }}
            {{ section.settings.top_color_border }}">
              <div>
                <button class="btn btn--smaller {{ section.settings.top_color_button }}" 
                  title="{{ 'general.navigation.close' | t }}"
                  @click="cart_drawer = false;">
                  {% render 'component__icon', icon: 'x', size: '24', class: '' %}
                </button>
              </div>

              <div class="text-right">
                {{ 'cart.general.title' | t }} 
                <span x-show="cart.item_count > 0" x-cloak>
                  (<span x-text="cart.item_count"></span>)
                </span>
              </div>
            </section>
            
            {%- comment -%}cart{%- endcomment -%}
            <section class="{{ section.settings.main_color_scheme_first }} flex flex-col flex-grow overflow-x-hidden overflow-y-auto" 
              x-data="{ 
                scroll: false,
                animate_index: 0,
                animate_delay: 0
              }"
              @scroll.throttle="scroll = true">

              {%- comment -%}progress bar{%- endcomment -%}
              {% if section.settings.progress_bar_enable %}
                <div class="border--b-width px-4 py-4
                  {{ section.settings.main_color_scheme_second }}
                  {{ section.settings.main_color_border }}">
                  <p class="type--small mb-2"
                    x-show="cart.shipping_gap > 0" x-cloak>
                    {{ 'cart.progress_bar.pre_text' | t }} 
                    <span
                      x-text="Shopify.formatMoney(cart.shipping_gap, '{{ cart.currency.symbol }}')">
                    </span> 
                    {{ 'cart.progress_bar.text' | t }} 
                  </p>
                  <p class="type--small mb-2"
                    x-show="cart.shipping_gap <= 0" x-cloak>
                      {{ section.settings.progress_bar_success }} 
                  </p>
                  <div class="color__bg-overlay-2 border--radius h-2 overflow-hidden">
                    <div class="color__bg-primary animation-500--all h-2" 
                      :style="{ width: cart.shipping_progress }"></div>
                  </div>
                </div>  
              {% endif %}
              
              {%- comment -%}cart items{%- endcomment -%}
              <template x-if="cart.items.length == 0">
                <div class="flex flex-col items-center justify-center flex-grow 
                  {{ section.settings.main_color_scheme_first }}
                  {{ section.settings.main_color_border }}">

                  <p>{{ 'cart.general.empty' | t }} </p>
                  <a class="btn" href="{{ section.settings.empty_button_url }}">
                    {{ section.settings.empty_button_label }}
                  </a>
                </div>
              </template>
              
              <template x-for="(item, index) in cart.items">
                <div>
                  <div class="border--b-width flex w-full p-4 gap-2
                    {{ section.settings.main_color_scheme_first }}
                    {{ section.settings.main_color_border }}">

                    <a class="w-[20%] h-full flex-none"
                      :href="item.url">
                      <div class="border--radius object-cover max-w-full overflow-hidden
                        {{ settings.thumbnails_ratio }}
                        {{ settings.thumbmails_color_scheme }}">
                        {% capture image_class %} w-full h-full object-cover animation-1000 {{ settings.thumbmails_color_scheme }}{% endcapture %}
                        <img class="{{ image_class }}" 
                          loading="lazy"
                          {% if settings.enable_animations %}
                            :class="{ 
                              'opacity-0' : cart_loading }" 
                          {% endif %}
                          :src="item.image" 
                          :alt="item.product_title" 
                          />
                      </div>
                    </a>

                    <div class="animation-500 flex flex-col justify-between flex-grow"
                      {% if settings.enable_animations %}
                        :class="{ 
                          'opacity-50' : cart_loading }"
                      {% endif %}>
                      <div class="flex items-start justify-between gap-2">
                        <a class="hover:no-underline no-underline" :href="item.url" tabindex="-1">
                          <p class="mb-0 !leading-tight" x-text="item.product_title"></p>
                          <template x-if="item.properties">
                            <template x-for="property in Object.entries(item.properties)">
                              <p x-show="!property[0].includes('__')" class="type--smaller mb-0 opacity-75" x-text="property[0] + ' : ' + property[1]"></p>
                            </template>
                          </template>
                            
                          
                          <p class="type--smaller mb-0 opacity-75" x-text="item.variant_title"></p>    
                          {% if settings.enable_sku %}
                            <p class="type--smaller mb-0 opacity-75" x-text="item.sku"></p>
                          {% endif %}       
                          <p class="type--smaller mb-0 opacity-75" x-text="item.selling_plan_allocation ? item.selling_plan_allocation.selling_plan.name : ''"></p>
                          <template x-for="(discount) in item.discounts">
                            <div class="mt-2">
                              {% capture badge_content %}
                                <span class="type--smaller type__nav mr-1" x-text="discount.title"></span>
                                <span class="type--smaller type__nav mr-1">{% if settings.type_seperator == 'dot' %}Â·{% else %}|{% endif %}</span>
                                <span class="type--smaller type__nav" x-text="Shopify.formatMoney(discount.amount, '{{ cart.currency.symbol }}')"></span>
                              {% endcapture %}
                              {% render 'component__badge', 
                                color: 'overlay-2',
                                text: 'text',
                                icon: 'tag',
                                content: badge_content %}
                            </div>
                          </template>
                        </a>

                        <div class="flex flex-col items-end">
                          <span class="!leading-tight" x-text="Shopify.formatMoney(item.line_price, '{{ cart.currency.symbol }}')"></span>
                          <span
                            x-show="item.total_discount > 0"
                            x-cloak>
                            <s class="!leading-tight" 
                              x-text="Shopify.formatMoney(item.original_line_price, '{{ cart.currency.symbol }}')">
                            </s>
                          </span>
                          <span class="type--small" x-show="item.unit_price_measurement">
                            <span x-text="Shopify.formatMoney(item.unit_price, '{{ cart.currency.symbol }}')"></span>
                            <span>/</span>
                            <span x-text="
                              if(item.unit_price_measurement){
                                return item.unit_price_measurement.reference_value;
                              }"></span>
                            <span x-text="
                              if(item.unit_price_measurement){
                                return item.unit_price_measurement.reference_unit;
                              }"></span>
                          </span>
                        </div>

                      </div>
                      <div class="flex items-center justify-between gap-2 mt-2">

                        <div class="relative flex max-w-[150px] color__text color__border-divider-2 border--width hover:color__border-selected-1 color__bg-overlay-1 border__input--radius overflow-hidden animation-500" 
                          x-data="{ 
                            button_loading: false
                          }">
                          <button class="btn btn--smaller btn--plain shrink-0 !rounded-none" 
                            :disabled="button_loading"
                            title="{{ 'cart.general.decrease' | t }}"
                            @click="
                              if(changeCartItemQuantity(item.key, item.quantity-1, false, false)) {
                                button_loading = true; 
                                item.quantity--;
                                setTimeout(function(){ button_loading = false}, 500);
                              }">
                            {% render 'component__icon', icon: 'minus', size: '14', class: '' %}
                          </button>
                          <label :for="'cart-' + item.key + '-quantity'" class="sr-only">{{ 'products.general.quantity' | t }}</label>
                          <input :id="'cart-' + item.key + '-quantity'" placeholder="1" type="text" 
                            class="form-input !border-0 text-center !rounded-none" 
                            @change.debounce="
                              changeCartItemQuantity(item.key, item.quantity, false);
                              button_loading = true; 
                              setTimeout(function(){ button_loading = false}, 500);" 
                            x-model='item.quantity'>
                          <div class="btn__spinner btn--smaller !w-auto"
                            :class="{ '!visible color__bg-overlay-1 z-10' : button_loading }">
                            {% render 'component__icon', icon: 'spinner', size: '16', class: '' %}
                          </div>
                          <button class="btn btn--smaller btn--plain shrink-0 !rounded-none" 
                            :disabled="button_loading"
                            title="{{ 'cart.general.increase' | t }}"
                            @click="
                              if(changeCartItemQuantity(item.key, item.quantity+1, false, false)) {
                                button_loading = true; 
                                item.quantity++;
                                setTimeout(function(){ button_loading = false}, 500);
                              }">
                            {% render 'component__icon', icon: 'plus', size: '14', class: '' %}
                          </button>
                        </div>
                        
                        <div x-data="{ button_loading: false }">
                          <button 
                            class="btn btn--load btn--plain btn--small"
                            :class="{ 'btn--loading' : cart_loading && button_loading }"
                            :disabled="button_loading"
                            @click="changeCartItemQuantity(item.key, 0, false); button_loading = true; setTimeout(function(){ button_loading = false}, 500);" >
                            {% render 'component__icon', icon: 'trash', size: '14', class: '' %}
                            <div class="btn__spinner">
                              {% render 'component__icon', icon: 'spinner', size: '20', class: '' %}
                            </div>
                          </button>
                        </div>
                      </div>
                    </div>
                    
                  </div>
                </div>
              </template>

              {%- comment -%}notes{%- endcomment -%}
              {% if section.settings.main_enable_cart_note %}
                <div class="border--b-width w-full p-4 
                  {{ section.settings.main_color_scheme_second }}
                  {{ section.settings.main_color_border }}" 
                  x-data="{ reveal: cart.note != '', currentNote: cart.note }"
                  x-show="cart.items.length > 0"
                  x-cloak>
                  <label class="flex items-center">
                    <label for="notes" class="sr-only">{{ 'cart.notes.title' | t }}</label>
                    <input id="notes" type="checkbox" :checked="reveal" class="form-checkbox" @click="reveal = ! reveal">

                    <p class="text--small mb-0 ml-2">{{ 'cart.notes.add' | t }}</p>
                  </label>

                  <textarea 
                    rows="4" 
                    class="form-textarea border--radius w-full mt-2"
                    placeholder="{{ 'cart.notes.placeholder' | t }}"
                    name="note"
                    x-show="reveal"
                    x-model="currentNote"
                    @keydown.debounce="updateCartNote(currentNote)"
                    x-cloak></textarea>
                </div>
              {% endif %}
            
              {%- comment -%}subtotal{%- endcomment -%}
              <div class="border--b-width w-full p-4 
                {{ section.settings.main_color_scheme_second }}
                {{ section.settings.main_color_border }}"
                {% unless section.settings.main_enable_cart_subtotals %}x-show="cart.total_discount > 0"{% endunless %}
                x-cloak>
                <div class="flex items-center justify-between w-full mb-1"
                  x-show="cart.total_discount > 0">
                  <span class="">{{ 'cart.general.subtotal' | t }}</span>
                  <span class="" x-text="Shopify.formatMoney(cart.original_total_price, '{{ cart.currency.symbol }}')"></span>
                </div>
                <div class="flex items-center justify-between w-full mb-1"
                  x-show="cart.total_discount > 0">
                  <span>{{ 'cart.general.discount' | t }}</span>
                  <span x-text="'-' + Shopify.formatMoney(cart.total_discount, '{{ cart.currency.symbol }}')"></span>
                </div>
                <div class="flex items-center justify-between w-full">
                  <span class="flex items-center w-full">
                    <strong>{{ 'cart.general.total' | t }}</strong>
                    {% if cart.taxes_included %}
                      {%- capture taxes_included -%}
                        {{ 'customer.order.taxes_included' | t }}
                      {%- endcapture -%}
                      <div class="ml-1">
                        {% render 'component__badge', 
                          color: 'overlay-2',
                          icon: '',
                          content: taxes_included %}
                      </div>
                    {% endif %}
                  </span>
                  <strong x-text="Shopify.formatMoney(cart.total_price, '{{ cart.currency.symbol }}')"></strong>
                </div>
              </div>
              
              {%- comment -%}share{%- endcomment -%}
              {% if section.settings.main_enable_cart_share %}
                <div class="border--b-width w-full p-4
                  {{ section.settings.main_color_scheme_second }}
                  {{ section.settings.main_color_border }}"
                  x-show="cart.items.length > 0"
                  x-cloak>

                  <p class="type--small mb-2">{{ 'cart.share.title' | t }}</p>
                  <div class="flex w-full mb-2"
                    x-data="{
                      copy: '{{ 'cart.share.copy_url' | t }}'
                    }">
                    <label for="copy-cart" class="sr-only">{{ 'cart.share.copy_url' | t }}</label>
                    <input 
                      id="copy-cart"
                      class="form-input flex-grow -mr-6" 
                      type="text"
                      placeholder="cart/?="
                      autocorrect="off" 
                      autocapitalize="off"
                      :value="generateUrl()">
                    <button type="submit" 
                      class="btn btn--secondary btn--smaller whitespace-nowrap shrink-0"
                      @click="
                        copyToClipboard('copy-cart');
                        copy = '{{ 'cart.share.copied' | t }}';
                      ">
                      <span class="btn__content" x-text="copy">{{ 'cart.share.copy_url' | t }}</span>
                    </button>
                  </div>

                  <p class="type--smaller mb-0 opacity-75">
                    {{ 'cart.share.description' | t }}
                  </p>
                </div>
              {% endif %} 

              {%- comment -%}scroll indicator{%- endcomment -%}
              <div class="bottom-4 sticky text-center"
                @click="scroll = true;"
                x-show="!scroll && cart.items.length > 5"
                {% if settings.enable_animations %}
                  x-transition:enter="animation-300"
                  x-transition:enter-start="opacity-0 translate-y-8"
                  x-transition:enter-end="opacity-100"
                  x-transition:leave="animation-300"
                  x-transition:leave-start="opacity-100"
                  x-transition:leave-end="opacity-0 translate-y-8"
                {% endif %}
                x-cloak>
                <button class="btn btn--plain btn--small shadow-sm" title="{{ 'general.scroll.scroll_down' | t }}">
                  {% render 'component__icon', icon: 'arrow-down', size: '20', class: '' %}
                </button>
              </div>
              
            </section>
              
            {%- comment -%}sticky footer{%- endcomment -%}
            <aside class="border--t-width mt-auto
              {{ section.settings.bottom_color_scheme }}
              {{ section.settings.bottom_color_border }}"
              x-show="cart.items.length > 0" 
              x-cloak>
              <div class="flex flex-wrap"
                x-data="{
                  index: 0,
                  index_scroll: 0,
                  index_size: 4,
                  show_arrows: false,
                  scrollToIndex(index_scroll) {
                    let slider = this.$refs.slider;
                    let currentSlide = slider.querySelector('[data-slide=&quot;'+ index_scroll + '&quot;]');
                    currentSlide.scrollIntoView({behavior: 'smooth', inline: 'start', block: 'nearest'});
                  },
                  scrollNext() {
                    this.index ++;
                    let slider = this.$refs.slider;
                    if(this.index > this.index_size){
                      slider.scrollLeft = 0;
                    } else {
                      slider.scrollLeft += slider.offsetWidth-300;
                    }
                  },
                  scrollBack() {
                    this.index --;
                    let slider = this.$refs.slider;
                    if(this.index < 0){
                      slider.scrollLeft = 999999;
                    } else {
                      slider.scrollLeft -= slider.offsetWidth-300;
                    }
                  }
                }">

                {%- comment -%}upsells{%- endcomment -%}
                {%- unless section.settings.cart_upsell_products == blank %}
                  {% if collections[section.settings.cart_upsell_products].products.size > 0 %}
                    <div 
                      class="relative flex flex-wrap w-full mt-4">
                      
                      <div class="md:flex items-center justify-between hidden w-full gap-4 px-4 mb-4">
                        <div>{{ 'cart.general.upsell_title' | t }} </div>
                        <div class="flex gap-4">
                          <button class="btn btn--plain btn--small !w-8 !h-8 !min-w-0 !min-h-0"
                            :class="{ 'opacity-25' : !(index > 0) }"
                            :disabled="!(index > 0)"
                            title="{{ 'general.media.next_slide' | t }}"
                            @click="index_scroll = index - 1; scrollToIndex(index_scroll);">
                            {% render 'component__icon', icon: 'arrow-left', size: '16', class: '' %}
                          </button>
                          <button class="btn btn--plain btn--small !w-8 !h-8 !min-w-0 !min-h-0"
                            :class="{ 'opacity-25' : !(index < index_size) }"
                            :disabled="!(index < index_size)"
                            title="{{ 'general.media.previous_slide' | t }}"
                            @click="index_scroll = index + 1; scrollToIndex(index_scroll);">
                            {% render 'component__icon', icon: 'arrow-right', size: '16', class: '' %}
                          </button>
                        </div>
                      </div>
                      
                      <div class="whitespace-nowrap md:snap-x md:gap-4 hidescrollbar inline-flex w-full gap-2 px-4 overflow-x-auto" x-ref="slider">
                        {% for product in collections[section.settings.cart_upsell_products].products limit: 5 %}
                          {% render 'component__upsell-slider-item', 
                            product: product, 
                            index: forloop.index0 %}
                        {% endfor %}
                      </div>
                
                    </div>
                  {% endif %}
                {%- endunless -%}
                
                {%- comment -%}checkout{%- endcomment -%}
                <form class="w-full px-4 py-4" action="{{ routes.cart_url }}" method="post" x-data="{checkout_button_loading:false}" @submit.prevent="checkout_button_loading = true; if(enable_audio) { playSound(click_audio) } ;setTimeout(function(){ checkout_button_loading = false}, 5000); window.location.href = '/checkout';">

                  <p class="mb-0">
                    {% if section.settings.cart_button_behavior == 'checkout' %}
                      <button type="submit" name="checkout" 
                        class="!w-full btn btn--load {{ section.settings.bottom_color_button }}"
                        :class="{ 'btn--loading' : checkout_button_loading }"
                        :disabled="checkout_button_loading">
                        <div class="btn__spinner">
                          {% render 'component__icon', icon: 'spinner', size: '24', class: '' %}
                        </div>
                        <div class="btn__content">
                          {{ 'cart.general.checkout' | t }} {% if settings.type_seperator == 'dot' and settings.show_cart_button_prices %}Â·{% elsif settings.type_seperator == 'line' and settings.show_cart_button_prices %}|{% endif %} 
                          {% if settings.show_cart_button_prices %}
                          <span class="ml-1" x-text="Shopify.formatMoney(cart.total_price, '{{ cart.currency.symbol }}')"></span>
                          {% endif %}
                        </div>
                      </button>
                    {% else %}
                      <a href="{{ routes.cart_url }}" 
                        class="!w-full btn btn--load block {{ section.settings.bottom_color_button }}"
                        :class="{ 'btn--loading' : checkout_button_loading }">
                        {{ 'cart.general.title' | t }} {% if settings.type_seperator == 'dot' and settings.show_cart_button_prices %}Â·{% elsif settings.type_seperator == 'line' and settings.show_cart_button_prices %}|{% endif %} 
                        {% if settings.show_cart_button_prices %}
                        <span class="ml-1" x-text="Shopify.formatMoney(cart.total_price, '{{ cart.currency.symbol }}')"></span>
                        {% endif %}
                      </a>
                    {% endif %}
                    {% if section.settings.show_continue_shopping_button %}
                      <a href="{{ routes.cart_url }}" 
                        @click.prevent="cart_drawer = false;"
                        class="!w-full mt-2 btn btn--secondary btn--load block">
                        {{ 'cart.general.continue_shopping' | t }}
                      </a>
                    {% endif %}
                   
                  </p>
                  
                  {%- unless section.settings.bottom_disclaimer == blank %}
                    <div class="type--smaller m-0--clear mt-2">
                      {{ section.settings.bottom_disclaimer }}
                    </div>
                  {%- endunless -%}

                </form>
              </div>
            </aside>
            
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

{% render 'component__alert',
  alert_id: 'cart_alert',
  cart_bar: true,
  content: alert_content %}

<script>
  window.__initialData = window.__initialData || {};
  Object.assign(window.__initialData, {
    progress_bar_threshold: {{ section.settings.progress_bar_threshold | times: 100 }},
  });
</script>

{% schema %}
{
  "name":"t:sections.theme_cart.name",
  "settings":[
    {
      "type":"header",
      "content":"t:sections.all.headers.header__12.content"
    },
    {
      "type":"select",
      "id":"top_color_scheme",
      "label":"t:sections.all.colors.settings.color_scheme.label",
      "options":[
        {
          "value":"color__bg-body color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__1.label"
        },
        {
          "value":"color__bg-neutral color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__2.label"
        },
        {
          "value":"color__bg-overlay-1 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__3.label"
        },
        {
          "value":"color__bg-overlay-2 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__4.label"
        },
        {
          "value":"color__bg-overlay-3 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__5.label"
        },
        {
          "value":"color__bg-primary color__primary",
          "label":"t:sections.all.colors.settings.color_scheme.options__6.label"
        },
        {
          "value":"color__bg-secondary color__secondary",
          "label":"t:sections.all.colors.settings.color_scheme.options__7.label"
        },
        {
          "value":"color__bg-tertiary color__tertiary",
          "label":"t:sections.all.colors.settings.color_scheme.options__8.label"
        }
      ],
      "default":"color__bg-body color__text"
    },
    {
      "type":"select",
      "id":"top_color_border",
      "label":"t:sections.all.colors.settings.color_border.label",
      "options":[
        {
          "value":"color__border-divider-1",
          "label":"t:sections.all.colors.settings.color_border.options__1.label"
        },
        {
          "value": "color__border-selected-1",
          "label": "t:sections.all.colors.settings.color_border.options__2.label"
        },
        {
          "value":"!color__border-transparent",
          "label":"t:sections.all.colors.settings.color_border.options__3.label"
        }
      ],
      "default":"color__border-divider-1"
    },
    {
      "type":"select",
      "id":"top_color_button",
      "label":"t:sections.all.colors.settings.color_button.label",
      "options":[
        {
          "value":"btn",
          "label":"t:sections.all.colors.settings.color_button.options__1.label"
        },
        {
          "value":"btn btn--secondary",
          "label":"t:sections.all.colors.settings.color_button.options__2.label"
        },
        {
          "value":"btn btn--tertiary",
          "label":"t:sections.all.colors.settings.color_button.options__5.label"
        },
        {
          "value":"btn btn--neutral",
          "label":"t:sections.all.colors.settings.color_button.options__3.label"
        },
        {
          "value":"btn btn--plain",
          "label":"t:sections.all.colors.settings.color_button.options__4.label"
        }
      ],
      "default":"btn btn--plain"
    },
    {
      "type":"header",
      "content":"t:sections.all.headers.header__20.content"
    },
    {
      "type":"number",
      "id":"progress_bar_threshold",
      "label":"t:sections.theme_cart.settings.progress_bar_threshold.label",
      "info":"t:sections.theme_cart.settings.progress_bar_threshold.info"
    },
    {
      "type":"text",
      "id":"progress_bar_success",
      "label":"t:sections.theme_cart.settings.progress_bar_success.label",
      "info":"t:sections.theme_cart.settings.progress_bar_success.info"
    },
    {
      "type":"checkbox",
      "id":"progress_bar_enable",
      "label":"t:sections.theme_cart.settings.progress_bar_enable.label",
      "default":false
    },
    {
      "type":"header",
      "content":"t:sections.all.headers.header__13.content"
    },
    {
      "type":"select",
      "id":"main_color_scheme_first",
      "label":"t:sections.all.colors.settings.color_scheme.label",
      "options":[
        {
          "value":"color__bg-body color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__1.label"
        },
        {
          "value":"color__bg-neutral color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__2.label"
        },
        {
          "value":"color__bg-overlay-1 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__3.label"
        },
        {
          "value":"color__bg-overlay-2 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__4.label"
        },
        {
          "value":"color__bg-overlay-3 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__5.label"
        },
        {
          "value":"color__bg-primary color__primary",
          "label":"t:sections.all.colors.settings.color_scheme.options__6.label"
        },
        {
          "value":"color__bg-secondary color__secondary",
          "label":"t:sections.all.colors.settings.color_scheme.options__7.label"
        },
        {
          "value":"color__bg-tertiary color__tertiary",
          "label":"t:sections.all.colors.settings.color_scheme.options__8.label"
        }
      ],
      "default":"color__bg-body color__text"
    },
    {
      "type":"select",
      "id":"main_color_scheme_second",
      "label":"t:sections.theme_cart.settings.main_color_scheme_second.label",
      "options":[
        {
          "value":"color__bg-body color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__1.label"
        },
        {
          "value":"color__bg-neutral color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__2.label"
        },
        {
          "value":"color__bg-overlay-1 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__3.label"
        },
        {
          "value":"color__bg-overlay-2 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__4.label"
        },
        {
          "value":"color__bg-overlay-3 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__5.label"
        },
        {
          "value":"color__bg-primary color__primary",
          "label":"t:sections.all.colors.settings.color_scheme.options__6.label"
        },
        {
          "value":"color__bg-secondary color__secondary",
          "label":"t:sections.all.colors.settings.color_scheme.options__7.label"
        },
        {
          "value":"color__bg-tertiary color__tertiary",
          "label":"t:sections.all.colors.settings.color_scheme.options__8.label"
        }
      ],
      "default":"color__bg-body color__text"
    },
    {
      "type":"select",
      "id":"main_color_border",
      "label":"t:sections.all.colors.settings.color_border.label",
      "options":[
        {
          "value":"color__border-divider-1",
          "label":"t:sections.all.colors.settings.color_border.options__1.label"
        },
        {
          "value": "color__border-selected-1",
          "label": "t:sections.all.colors.settings.color_border.options__2.label"
        },
        {
          "value":"!color__border-transparent",
          "label":"t:sections.all.colors.settings.color_border.options__3.label"
        }
      ],
      "default":"color__border-divider-1"
    },
    {
      "type":"checkbox",
      "id":"main_enable_cart_note",
      "label":"t:sections.theme_cart.settings.main_enable_cart_note.label",
      "default":true
    },
    {
      "type":"checkbox",
      "id":"main_enable_cart_share",
      "label":"t:sections.theme_cart.settings.main_enable_cart_share.label",
      "default":false
    },
    {
      "type":"checkbox",
      "id":"main_enable_cart_subtotals",
      "label":"t:sections.theme_cart.settings.main_enable_cart_subtotals.label",
      "info":"t:sections.theme_cart.settings.main_enable_cart_subtotals.info",
      "default":true
    },
    {
      "type":"header",
      "content":"t:sections.all.headers.header__14.content"
    },
    {
      "type":"select",
      "id":"bottom_color_scheme",
      "label":"t:sections.all.colors.settings.color_scheme.label",
      "options":[
        {
          "value":"color__bg-body color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__1.label"
        },
        {
          "value":"color__bg-neutral color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__2.label"
        },
        {
          "value":"color__bg-overlay-1 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__3.label"
        },
        {
          "value":"color__bg-overlay-2 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__4.label"
        },
        {
          "value":"color__bg-overlay-3 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__5.label"
        },
        {
          "value":"color__bg-primary color__primary",
          "label":"t:sections.all.colors.settings.color_scheme.options__6.label"
        },
        {
          "value":"color__bg-secondary color__secondary",
          "label":"t:sections.all.colors.settings.color_scheme.options__7.label"
        },
        {
          "value":"color__bg-tertiary color__tertiary",
          "label":"t:sections.all.colors.settings.color_scheme.options__8.label"
        }
      ],
      "default":"color__bg-body color__text"
    },
    {
      "type":"select",
      "id":"bottom_color_border",
      "label":"t:sections.all.colors.settings.color_border.label",
      "options":[
        {
          "value":"color__border-divider-1",
          "label":"t:sections.all.colors.settings.color_border.options__1.label"
        },
        {
          "value": "color__border-selected-1",
          "label": "t:sections.all.colors.settings.color_border.options__2.label"
        },
        {
          "value":"!color__border-transparent",
          "label":"t:sections.all.colors.settings.color_border.options__3.label"
        }
      ],
      "default":"color__border-divider-1"
    },
    {
      "type":"select",
      "id":"bottom_color_button",
      "label":"t:sections.all.colors.settings.color_button.label",
      "options":[
        {
          "value":"btn",
          "label":"t:sections.all.colors.settings.color_button.options__1.label"
        },
        {
          "value":"btn btn--secondary",
          "label":"t:sections.all.colors.settings.color_button.options__2.label"
        },
        {
          "value":"btn btn--tertiary",
          "label":"t:sections.all.colors.settings.color_button.options__5.label"
        },
        {
          "value":"btn btn--neutral",
          "label":"t:sections.all.colors.settings.color_button.options__3.label"
        },
        {
          "value":"btn btn--plain",
          "label":"t:sections.all.colors.settings.color_button.options__4.label"
        }
      ],
      "default":"btn"
    },
    {
      "type": "select",
      "id": "cart_button_behavior",
      "label": "t:sections.theme_cart.settings.cart_button_behavior.label",
      "info": "t:sections.theme_cart.settings.cart_button_behavior.info",
      "options": [
        {
          "value": "checkout",
          "label": "t:sections.theme_cart.settings.cart_button_behavior.options__1.label"
        },
        {
          "value": "cart",
          "label": "t:sections.theme_cart.settings.cart_button_behavior.options__2.label"
        }
      ],
      "default": "checkout"
    },
    {
      "type":"richtext",
      "id":"bottom_disclaimer",
      "label":"t:sections.theme_cart.settings.bottom_disclaimer.label"
    },
    {
      "type":"collection",
      "id":"cart_upsell_products",
      "label":"t:sections.theme_cart.settings.cart_upsell_products.label",
      "info":"t:sections.theme_cart.settings.cart_upsell_products.info"
    },
    {
      "type":"checkbox",
      "id":"show_continue_shopping_button",
      "label":"t:sections.theme_cart.settings.show_continue_shopping_button.label",
      "default": false
    },
    {
      "type":"header",
      "content":"t:sections.all.headers.header__7.content"
    },
    {
      "type":"select",
      "id":"sidebar_color_scheme",
      "label":"t:sections.all.colors.settings.color_scheme.label",
      "options":[
        {
          "value":"color__bg-body color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__1.label"
        },
        {
          "value":"color__bg-neutral color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__2.label"
        },
        {
          "value":"color__bg-overlay-1 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__3.label"
        },
        {
          "value":"color__bg-overlay-2 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__4.label"
        },
        {
          "value":"color__bg-overlay-3 color__text",
          "label":"t:sections.all.colors.settings.color_scheme.options__5.label"
        },
        {
          "value":"color__bg-primary color__primary",
          "label":"t:sections.all.colors.settings.color_scheme.options__6.label"
        },
        {
          "value":"color__bg-secondary color__secondary",
          "label":"t:sections.all.colors.settings.color_scheme.options__7.label"
        },
        {
          "value":"color__bg-tertiary color__tertiary",
          "label":"t:sections.all.colors.settings.color_scheme.options__8.label"
        }
      ],
      "default":"color__bg-body color__text"
    },
    {
      "type":"select",
      "id":"sidebar_color_border",
      "label":"t:sections.all.colors.settings.color_border.label",
      "options":[
        {
          "value":"color__border-divider-1",
          "label":"t:sections.all.colors.settings.color_border.options__1.label"
        },
        {
          "value":"color__border-selected-1",
          "label":"t:sections.all.colors.settings.color_border.options__2.label"
        }
      ],
      "default":"color__border-divider-1"
    },
    {
      "type":"header",
      "content":"t:sections.all.headers.header__9.content"
    },
    {
      "type":"text",
      "id":"empty_button_label",
      "label":"t:sections.theme_cart.settings.empty_button_label.label",
      "default":{
        "en":"Shop all",
        "es": "Comprar todo",
        "it": "Acquista tutto",
        "de": "Alles kaufen",
        "fr": "Magasiner tout"
      }
    },
    {
      "type":"url",
      "id":"empty_button_url",
      "label":"t:sections.theme_cart.settings.empty_button_url.label",
      "default":"/collections/all"
    }
  ],
  "blocks":[
    {
      "type":"Content",
      "name":"t:sections.theme_cart.blocks.content.name",
      "limit":4,
      "settings":[
        {
          "type":"paragraph",
          "content":"t:sections.theme_cart.blocks.content.settings.paragraph__1.content"
        },
        {
          "type":"paragraph",
          "content":"t:sections.theme_cart.blocks.content.settings.paragraph__2.content"
        },
        {
          "type":"header",
          "content":"t:sections.all.headers.header__4.content"
        },
        {
          "type":"image_picker",
          "id":"image_featured",
          "label":"t:sections.theme_cart.blocks.content.settings.image_featured.label",
          "info":"t:sections.theme_cart.blocks.content.settings.image_featured.info"
        },
        {
          "type":"text",
          "id":"heading",
          "label":"t:sections.theme_cart.blocks.content.settings.heading.label",
          "default":{
            "en":"Block heading",
            "es": "Encabezado de bloque",
            "it": "Intestazione del blocco",
            "de": "BlockÃ¼berschrift",
            "fr": "En-tÃªte de bloc"
          }
        },
        {
          "type":"richtext",
          "id":"content",
          "label":"t:sections.theme_cart.blocks.content.settings.content.label",
          "default": {
            "en": "<p>Remind customers of offers like free shipping and lifetime warranty</p>",
            "es": "<p>Recuerde a los clientes ofertas como envÃ­o gratuito y garantÃ­a de por vida</p>",
            "it": "<p>Ricorda ai clienti offerte come la spedizione gratuita e la garanzia a vita</p>",
            "de": "<p>Erinnern Sie Kunden an Angebote wie kostenlosen Versand und lebenslange Garantie</p>",
            "fr": "<p>Rappelez aux clients des offres telles que la livraison gratuite et la garantie Ã  vie</p>"
          }
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": ["custom.overlay"]
  }
}
{% endschema %}