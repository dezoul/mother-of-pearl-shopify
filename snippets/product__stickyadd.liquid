<!-- snippets/product__stickyadd.liquid -->
{% comment %} 
  A stickybar to show a fixed add to cart button on product pages.

  Accepts:
    - blocksettings: liquid object of block settings
      
  Usage:
    {% render 'product__stickyadd', 
      blocksettings: block.settings %}

  Globals: 
    - settings.layout_horizontal: horizontaly margin
    - settings.type_seperator: setting to pick the type of seperator between text

  Possible enhancements:
    - Add star rating to sticky bar. 

  Pro tips:
    - This snippet only works on product pages.
{% endcomment %}

{% case blocksettings.color_scheme %}
  {% when 'color__bg-body color__text' %}
    {% assign color_contrast = 'btn--secondary' %}
  {% when 'color__bg-neutral color__text' %}
    {% assign color_contrast = 'btn--secondary' %}
  {% when 'color__bg-overlay-1 color__text' %}
    {% assign color_contrast = 'btn--secondary' %}
  {% when 'color__bg-overlay-2 color__text' %}
    {% assign color_contrast = 'btn--secondary' %}
  {% when 'color__bg-overlay-3 color__text' %}
    {% assign color_contrast = 'btn--secondary' %}
  {% when 'color__bg-primary color__primary' %}
    {% assign color_contrast = 'btn--secondary' %}
  {% when 'color__bg-secondary color__secondary' %}
    {% assign color_contrast = 'btn--plain' %}
{% endcase %}

<div class="fixed left-0 bottom-0 w-full border--t-width py-4 color__border-divider-1
  {{ blocksettings.color_scheme }}"
  {% if blocksettings.on_scroll %}
    x-show="stickyadd"
    {% if settings.enable_animations %}
      x-transition:enter="animation-300"
      x-transition:enter-start="opacity-0 translate-y-8"
      x-transition:enter-end="opacity-100"
      x-transition:leave="animation-300"
      x-transition:leave-start="opacity-100"
      x-transition:leave-end="opacity-0 translate-y-8"
    {% endif %}
    x-cloak
  {% endif %}>
  <div class="{{ settings.layout_horizontal }}">
    <div class="flex flex-row flex-wrap items-center justify-between gap-4">
      <div class="md:w-1/2 md:block hidden w-full">
        <h5 class="type__heading type--base mb-0">
          <strong>{{ product.title }}</strong>
          <strong 
            x-show="!buttonDisabled && variantTitle != 'Default Title'" 
            x-text="'{% if settings.type_seperator == 'dot' %}·{% else %}|{% endif %}' + ' ' + variantTitle"></strong>
        </h5>        
        {%- unless blocksettings.content == blank -%}
          <div class="type--small m-0--clear mt-2">
            {{ blocksettings.content }}
          </div>
        {% endunless %}
      </div>
      <div class="md:w-auto w-full">
        <button class="btn btn--load !w-full {{ color_contrast }}"  
          :class="{ 'btn--loading' : cart_loading && button_loading }"
          disabled
          :disabled="button_loading"
          type="button" 
          role="button" 
          @click="choosing = true; document.querySelector('.options').scrollIntoView();"
          x-show="buttonDisabled && defaultAvailable"
          x-cloak>
          <div class="btn__content">
            {{ 'products.general.choose_options' | t }}
          </div>
        </button>
        <button class="btn btn--load !w-full {{ color_contrast }}"
          :class="{ 'btn--loading' : cart_loading && button_loading }"
          disabled
          :disabled="button_loading"
          type="button"
          role="button"
          x-show="!defaultAvailable"
          x-cloak>
          <div class="btn__content">
            {{ 'products.general.sold_out' | t }}
          </div>
        </button>
        <button 
          class="btn btn--load !w-full"  
          :class="{ 'btn--loading' : cart_loading && button_loading }"
          :disabled="button_loading"
          role="button"
          @click.prevent="
            addCartItem(defaultVariantId, defaultSellingPlanId, quantity, true); 
            button_loading = true; 
            option_popup = false; 
            setTimeout(function(){ button_loading = false}, 500);"
          x-show="!buttonDisabled && defaultAvailable">
          <div class="btn__content">
            {% if product.metafields.custom.button_text %}
              {{ product.metafields.custom.button_text }} {% if settings.type_seperator == 'dot' and settings.show_product_button_prices %}·{% elsif settings.type_seperator == 'line' and settings.show_product_button_prices %}|{% endif %}
            {% else %}
            {{ 'products.general.add_to_cart' | t }} {% if settings.type_seperator == 'dot' and settings.show_product_button_prices %}·{% elsif settings.type_seperator == 'line' and settings.show_product_button_prices %}|{% endif %}
            {% endif %}
            {% if settings.show_product_button_prices %}
              <span class="ml-1" 
                x-text="Shopify.formatMoney(calculatedPrice, '{{ cart.currency.symbol }}')">
                {{ product.price | money }}
              </span>
            {% endif %}
            
          </div>
          <div class="btn__spinner">
            {% render 'component__icon', icon: 'spinner', size: '24', class: '' %}
          </div>
        </button>
      </div>
    </div>
  </div>
</div>