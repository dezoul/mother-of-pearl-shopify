<!-- snippets/product__upsell.liquid -->
{% comment %} 
  Block to display a upsell within product block loop.

  Accepts:
    - blocksettings: liquid object of block settings

  Usage:
    {% render 'product__upsell', 
      blocksettings: block.settings %}

  Globals:
    - settings.thumbmails_color_scheme: color scheme of thumbnails
    - settings.type_thumbnail: typography for thumbnail titles
    - settings.type_thumbnail_capitilization: set the capitilization for thumbnail titles

  Possible enhancements: 
    - Fix for duplicate IDs - quantity
  
  Pro tips:
    - Use the Search and Discovery app to update and set custom upsells.
    - Upsells can be set to related or complimentary products.
{% endcomment %}

<section 
  x-data="{
    initialLoad: true,
    loadingRecomendations : false,
    complementary_products: [],
    getRecomendations(){
      fetch(window.Shopify.routes.root + 'recommendations/products.json?product_id={{ product.id }}&limit={{ blocksettings.products_count }}&intent={{ blocksettings.intent }}')
        .then(response => response.json())
        .then(({ products }) => {
          if (products.length > 0) {
            this.complementary_products = products;
            this.loadingRecomendations = true;
            this.initialLoad = false;
          }
        }
      );
    }
  }">

  <div x-show="initialLoad">
    {% capture container_class %}
      px-4 {{ blocksettings.style_border }} {{ section.settings.color_border }} {{ blocksettings.color_scheme }}
    {% endcapture %}

    {% capture content %}
      <div class="flex flex-col pb-4">
        <template x-for=" i in {{ blocksettings.products_count }}">
          {% render 'component__skeleton-upsell-item' %}
        </template>
      </div>
    {% endcapture %}

    {% render 'component__accordion',
      open: blocksettings.enable_open,
      button_label: blocksettings.title,
      container_class: container_class,
      inner_class: 'mb-4',
      content: content %}

  </div>
  
  <div x-init="getRecomendations();"
    x-show="complementary_products.length > 0"
    x-cloak>
  
    {% capture container_class %}
      px-4 color__border-divider-1 {{ blocksettings.style_border }} {{ blocksettings.color_scheme }}
    {% endcapture %}
  
    {% capture content %}
      <div class="flex flex-col pb-2">
        <template x-for="(item, index) in complementary_products">
          <div :class="'md:h-[4rem] lg:h-full relative md:snap-center mb-2 flex justify-center flex-none whitespace-normal border--width border--radius overflow-hidden color__border-divider-1 upsell upsell--' + item.id"
            x-show="item.available">

            <div class="color__bg-body color__text flex items-center w-full">

              <div class="w-[25%] h-full">
                <div class="object-cover flex items-center h-full max-w-full aspect-[1/1] aspect-w-1 aspect-h-1
                  {{ settings.thumbmails_color_scheme }}">
                  <a :href=" item.url"
                    tabindex="-1">
                    <img class="w-full h-full object-cover
                      {{ settings.thumbmails_color_scheme }}"
                      width="200"
                      loading="lazy"
                      :src=" item.featured_image" 
                      :alt=" item.title" />
                  </a>
                </div>
              </div>

              <div class="md:py-4 flex flex-row items-center justify-between flex-grow gap-2 p-2 px-4 text-left">
                <a class="hover:no-underline no-underline" :href=" item.url">
                  <div class="grow flex flex-col">
                    <p class="mb-0 type--small
                      {{ settings.type_thumbnail_capitilization }}
                      {% if settings.type_thumbnail == 'body' %}type__body{% endif %}
                      {% if settings.type_thumbnail == 'heading' %}type__heading{% endif %}
                      {% if settings.type_thumbnail == 'navigation' %}type__nav{% endif %}"
                      x-text="item.title"></p>
                    <p class="type--small mb-0" 
                      x-text="Shopify.formatMoney(item.price,'{{ cart.currency.symbol }}')"></p>
                  </div>
                </a>

                <div>
                  <form class="flex flex-wrap" 
                    action="/cart/add" 
                    method="post" 
                    enctype="multipart/form-data"
                    x-data="{
                      defaultVariantId: item.variants[0].id,
                      defaultSellingPlanId: 0,
                      quantity: 1,
                    }"
                    @submit.prevent="
                      addCartItem(defaultVariantId, defaultSellingPlanId, quantity, true); 
                      button_loading = true; 
                      setTimeout(function(){ button_loading = false}, 500);
                    ">
                
                      <div class="!w-full" 
                        x-show="item.variants[0].option1 == 'Default Title'"> 
                        <input name="id" 
                          type="hidden"
                          value="item.variants[0].id">
                        <label 
                          :for="'upsell_item_quantity_' + item.variants[0].id" class="sr-only">{{ 'products.general.quantity' | t }}</label>
                        <input :id="'upsell_item_quantity_' + item.variants[0].id"
                          class="!hidden" 
                          type="text" 
                          name="quantity" 
                          value="1" 
                          min="1"
                          max="" 
                          x-model="quantity">
                        <button type="submit" 
                          role="button"   
                          class="btn btn--secondary btn--small btn--load"
                          :class="{ 'btn--loading' : cart_loading && button_loading }"
                          :disabled="button_loading">
                          <div class="btn__content">{{ 'products.general.short_add_label' | t }}</div>
                          <div class="btn__spinner">
                            {% render 'component__icon', icon: 'spinner', size: '24', class: '' %}
                          </div>
                        </button>
                      </div>
                
                      <div>
                        <button type="button" 
                          role="button"
                          class="btn btn--secondary btn--small btn--load" 
                          :class="{ 'btn--loading' : button_loading }" 
                          :disabled="button_loading"
                          @click="
                            button_loading = true; 
                            fetchAndRenderQuickAdd(item.handle, 'upsell');
                            setTimeout(function(){ button_loading = false}, 500);"
                          x-show="item.variants[0].option1 !== 'Default Title'">
          
                          <div class="btn__content">{{ 'products.general.short_add_label' | t }}</div>
                          <div class="btn__spinner">
                            {% render 'component__icon', icon: 'spinner', size: '24', class: '' %}
                          </div>
                        </button>
                      </div>

                  </form>
                </div>
              </div>

            </div>
    
            {%- comment -%}quick add popup{%- endcomment -%}
            <div :id="'js:quickAdd-upsell-' + item.handle"></div>
    
          </div>
        </template>
      </div>
    {% endcapture %}
  
    {% render 'component__accordion',
      open: blocksettings.enable_open,
      button_label: blocksettings.title,
      container_class: container_class,
      content: content,
      inner_class: 'mb-4' %}
  
  </div>
</section>